// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model Student {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  surname    String?
  studentId  Int @unique
  yearClass  Int?
  Class      Int?
  reason     String?
  total      Int?
  oldMonth   Int?
  timestamps DateTime @default(now())
  username   String? @unique
  password   String?
  image      String?

  conversationIds String[] @db.ObjectId
  conversations  Conversation[] @relation(fields: [conversationIds], references: [id])

  seenMessageIds String[] @db.ObjectId
  seenMessages Message[] @relation("Seen", fields: [seenMessageIds], references: [id])

  Accounts Account[]
  messages Message[]
  Registeration Registeration?
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String

  student Student @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Conversation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?
  
  messagesIds String[] @db.ObjectId
  messages Message[]

  userIds String[] @db.ObjectId
  students Student[] @relation(fields: [userIds], references: [id])
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  image String?
  createdAt DateTime @default(now())

  seenIds String[] @db.ObjectId
  seen Student[] @relation("Seen", fields: [seenIds], references: [id])

  conversationId String @db.ObjectId
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  senderId String @db.ObjectId
  sender Student @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model Count {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  curTotal Int?
  curDay Int?
  curMonth Int?

  oldDay Int?
  oldMonth Int?

  graphToTal Int[]
  graphMonth Int[]

}

model Registeration {
  id String @id @default(auto()) @map("_id") @db.ObjectId 
  userId String @db.ObjectId @unique
  
  age Int?
  Height Int?
  Weight Int?
  Gpax Int?
  talent String? @default("")
  isDrug Boolean?

  student Student @relation(fields: [userId], references: [id], onDelete: Cascade)
}